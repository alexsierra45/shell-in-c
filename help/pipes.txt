En este apartado encontramos 4 comandos ( | , < , > , >> ) que nos permitiran redirigir la entrada y la salida 
de los comandos que ejecutemos.

El comando cmd1 | cmd2 ejecuta <cmd1>, redirecciona la salida de <cmd1> a la entrada de <cmd2> y luego
ejecuta <cmd2>.

El comando cmd < file redirecciona el contenido del archivo <file> a la entrada de <cmd> y ejecuta <cmd>.

El comando cmd > file ejecuta <cmd> redirecciona la salida de <cmd> hacia el archivo <file>, sobrescribiendo
el contenido de <file>.

El comando cmd >> file hace lo mismo que el comando anterior pero escribe al final de <file> sin sobreescribir 
el contenido de dicho archivo.

Adicionalmente se pueden combinar todas estos comandos en una sola línea.

Ejemplo:

my_sh $ cmd1 | cmd2
my_sh $ cmd < file
my_sh $ cmd > file
my_sh $ cmd >> file
my_sh $ cmd1 < file1 | cmd2 | cmd3 > file2 # el contenido de file1 se redirecciona a la entrada de cmd1,
la salida de cmd1 se redirecciona a la entrada de cmd2, la salida de cmd2 se redirecciona a la entrada de
cmd3 y la salida de cmd3 se redirecciona a file2.

Implementación:

Se parsea el comando introducido en busca de los operadores de este apartado. En caso de que la busqueda sea 
satisfactoria se identifican los argumentos a ejecutar y el file descriptor de salida y de entrada 
correspondientes, que se obtienen mediante la función pipe(), read() o write(). Luego se ejecuta el proceso y 
se atrapa la entrada y salida del proceso en el file descriptor correspondiente mediante la función dup2().
